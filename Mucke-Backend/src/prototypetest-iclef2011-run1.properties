##########################################################################################################################
# Prototypetest plugin properties file
# ===============================
# This property file defines the parameterization of the plugin with their default values
# that will be used when the plugin is used in batch-mode. 
##########################################################################################################################

# plugin manager
class = mucke.plugin.prototypetest.PrototypetestPluginManager

#####################
# query configuration
#####################

# defines the query collection file
querycollection.file = D:/Data/collections/ImageCLEF2011/wikipedia_topics_2011/wikipedia_topics_2011_v3.xml
# defines the query collection reader
querycollection.reader = mucke.query.XMLQueryCollectionReader
# defines which element separates individual queries
querycollection.signature = XPATH; /topics/topic
# defines the document id: FILENAME, XPATH or REGEX
query.id = XPATH; /topic/number
# definition of query facets
query.facets = query.en; query.de; query.fr; query.img; query.narrative
# defintion of specific query facets
query.en = XPATH; /topic/title[@lang='en']; TEXT
query.de = XPATH; /topic/title[@lang='de']; TEXT
query.fr = XPATH; /topic/title[@lang='fr']; TEXT
query.img = XPATH; /topic/image; IMAGE
query.narrative = XPATH; /topic/narrative; TEXT


######################
# search configuration
######################

# defines the search that might consists of many facets and use the query facets defined in the query configuration
search.facetsearchers = search.facetsearcher1, search.facetsearcher2
# search facet 1
search.facetsearcher1.class = mucke.search.TextFacetSearcher
search.facetsearcher1.facet = wikidoc
search.facetsearcher1.query.facets = query.en
# search facet 2
search.facetsearcher2.class = mucke.search.ImageFacetSearcher
search.facetsearcher2.facet = wikiimage
search.facetsearcher2.query.facets = query.img
# transform facets into the documents that contain them
search.documentsearcher = ON


##########################
# clustering configuration
##########################

clustering.facetmerge.class = mucke.clustering.SimpleFacetResultMerge
clustering.documentmerge.class = mucke.clustering.SimpleDocumentResultMerge


#####################
# index configuration
#####################

#
# document index that links all facets with a document ID (via DB table)
# 

# defines the location of the content that is parsed
docindex.contentfolder = D:/data/collections/ImageCLEF2011/all_text/metadata
# defines the document id: FILENAME, XPATH or REGEX
docindex.docid = FILENAME
# determines in what expression facet signatures are declared: XPATH or REGEX
#docindex.facetsignatureformat = XPATH
# defines which facets are used
docindex.facets = wikidoc; wikimeta; wikiimage
# defines wikidoc facet: location of facet id, facet type
docindex.facet.wikidoc = XPATH; /image/text/caption/@article; TEXT
# defines wikimeta facet: location of facet id, facet type
docindex.facet.wikimeta = CONSTANT; FILENAME; TEXT
# defines wikiimage facet: location of facet id, facet type
docindex.facet.wikiimage = XPATH; /image/@id; IMAGE

#
# wikidoc facet index definition 
#

# index implementation --- can be exchanged
wikidoc = mucke.index.StandardTextFacetIndexer
# defines the location of the content that is parsed
wikidoc.contentfolder = D:/data/collections/ImageCLEF2011/all_text/text
# defines the index location
wikidoc.indexfolder = D:/data/indices/ImageCLEF2011/prototypetest/wikidoc
# fields to be indexed
wikidoc.fields = wikidoc.field.wikidoc.contents
# IndexFieldGenerator to be used for indexing
wikidoc.fields.generator = mucke.index.IndexFieldGenerator
# definition of facet identifier (FILENAME or signature (XPath or RegEx))
wikidoc.field.facetid = FILENAME
# definition of field: contents (null means that all content is used)
wikidoc.field.wikidoc.contents = contents; null

#
# wikimeta facet index definition 
#

# index implementation --- can be exchanged
wikimeta = mucke.index.StandardTextFacetIndexer
# defines the location of the content that is parsed
wikimeta.contentfolder = D:/data/collections/ImageCLEF2011/all_text/metadata
# defines the index location
wikimeta.indexfolder = D:/data/indices/ImageCLEF2011/prototypetest/wikimeta
# fields to be indexed
wikimeta.fields = wikimeta.field.imageid; wikimeta.field.imagepath; wikimeta.field.docid.en; wikimeta.field.docid.de; wikimeta.field.docid.fr; wikimeta.field.desc.en; wikimeta.field.desc.de; wikimeta.field.desc.fr; wikimeta.field.comment.en; wikimeta.field.comment.de; wikimeta.field.comment.fr; wikimeta.field.caption.en; wikimeta.field.caption.de; wikimeta.field.caption.fr; wikimeta.field.comment
# IndexFieldGenerator to be used for indexing
wikimeta.fields.generator = mucke.index.IndexXMLFieldGenerator
# definition of facet identifier (FILENAME or signature (XPath or RegEx))
wikimeta.field.facetid = FILENAME
# definition of fields
wikimeta.field.imageid = imageID; /image/@id
wikimeta.field.imagepath = imagepath; /image/@file
## OLD -- but throws errors 
##wikimeta.field.docid.en = documentIdEn, substring(/image/text[@xml:lang='en']/caption/@article, string-length(/image/text[@xml:lang='en']/caption/@article)-5)
##wikimeta.field.docid.de = documentIdDe, substring(/image/text[@xml:lang='en']/caption/@article, string-length(/image/text[@xml:lang='en']/caption/@article)-5)
##wikimeta.field.docid.fr = documentIdFr, substring(/image/text[@xml:lang='en']/caption/@article, string-length(/image/text[@xml:lang='en']/caption/@article)-5)
wikimeta.field.docid.en = documentIdEn; /image/text[@xml:lang='en']/caption/@article
wikimeta.field.docid.de = documentIdDe; /image/text[@xml:lang='en']/caption/@article
wikimeta.field.docid.fr = documentIdFr; /image/text[@xml:lang='en']/caption/@article
wikimeta.field.desc.en = descriptionEn; /image/text[@lang='en']/description
wikimeta.field.desc.de = descriptionDe; /image/text[@lang='de']/description
wikimeta.field.desc.fr = descriptionFr; /image/text[@lang='fr']/description
wikimeta.field.comment.en = commentEn; /image/text[@lang='en']/comment
wikimeta.field.comment.de = commentDe; /image/text[@lang='de']/comment
wikimeta.field.comment.fr = commentFr; /image/text[@lang='fr']/comment
wikimeta.field.caption.en = captionEn; /image/text[@lang='en']/caption
wikimeta.field.caption.de = captionDe; /image/text[@lang='de']/caption
wikimeta.field.caption.fr = captionFr; /image/text[@lang='fr']/caption
wikimeta.field.comment = comment; /image/comment

#
# wikiimage facet index definition 
#

# index implementation --- can be exchanged
wikiimage = mucke.index.StandardImageFacetIndexer
# content to be indexed
wikiimage.contentfolder = D:/data/collections/ImageCLEF2011/medgift.hevs.ch/wikipediaMM/2010-2011
# defines the index location
wikiimage.indexfolder = D:/data/indices/ImageCLEF2011/prototypetest/wikiimage
# fields to be indexed, or NONE if no additional fields are needed
wikiimage.fields = NONE
# IndexFieldGenerator to be used for indexing, or NONE if no additional fields are needed
wikiimage.fields.generator = NONE
# definition of facet identifier (FILENAME or signature (XPath or RegEx))
wikiimage.field.facetid = FILENAME
# image features to be used. Possible values: 
# AutoColorCorrelogram: Creates the AutoColorCorrelation feature.
# CEDD: Creates the CEDD feature.
# ColorHistogram: Creates a DocumentBuilder for simple RGB color histograms.
# ColorLayout: Creates a fast (byte[] based) version of the MPEG-7 Color layout.
# EdgeHistogram: Creates a fast (byte[] based) version of the MPEG-7 EdgeHistogram.
# FCTH: Creates the FCTH feature.
# Full: Creates all available features.
# Gabor: Creates the Gabor feature.
# JCD: Creates the JCD feature.
# JointHistogram: Creates the JointHistogram feature.
# JpegCoefficientHistogram: Creates a the JpegCoefficientHistogram feature.
# OpponentHistogram: Creates the OpponentHistogram feature.
# Scalable: Creates a fast (byte[] based) version of the MPEG-7 ColorLayout.
# Tamura: Creates three Tamura features.
wikiimage.features = CEDD