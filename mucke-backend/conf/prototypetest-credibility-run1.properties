##########################################################################################################################
# Prototypetest plugin properties file
# ===============================
# This property file defines the parameterization of the plugin with their default values
# that will be used when the plugin is used in batch-mode. 
##########################################################################################################################

# plugin manager
class = at.tuwien.mucke.plugin.prototypetest.PrototypetestPluginManager


#####################
# index configuration
#####################

#
# document index that links all facets with a document ID (via DB table)
#

# defines the location of the content that is parsed
docindex.contentfolder = D:/Data/collections/UserCredibilityImages/imageLists
# defines the document id: FILENAME, XPATH or REGEX
docindex.docid = FILENAME
# determines in what expression facet signatures are declared: XPATH or REGEX
#docindex.facetsignatureformat = XPATH
# defines which facets are used
docindex.facets = credtext
# defines wikidoc facet: location of facet id, facet type
docindex.facet.credtext = XPATH; /image/text/caption/@article; TEXT
# defines wikiimage facet: location of facet id, facet type
docindex.facet.credimage = XPATH; /image/@id; IMAGE

#
# credtext facet index definition
#

# index implementation --- can be exchanged
credtext = at.tuwien.mucke.plugin.prototypetest.index.MultiTextFacetIndexer
# defines the location of the content that is parsed
credtext.contentfolder = D:/Data/collections/UserCredibilityImages/imageLists
# defines the index location
credtext.indexfolder = D:/data/indices/UserCredibilityImages/prototypetest/credtext
# fields to be indexed
credtext.fields = credtext.field.location; credtext.field.flikrlocation; credtext.field.tags; credtext.field.caption; credtext.field.userid
# IndexFieldGenerator to be used for indexing
credtext.fields.generator = at.tuwien.mucke.plugin.prototypetest.index.CSVIndexFieldGenerator
# definition of facet identifier (FILENAME or signature (XPath or RegEx))
credtext.field.facetid = FILENAME
# definition of field: location
credtext.field.location = location; 0
# definition of field: flikrlocation
credtext.field.flikrlocation = flikrlocation; 1
# definition of field: tags
credtext.field.tags = tags; 2
# definition of field: caption
credtext.field.caption = caption; 3
# definition of field: userid
credtext.field.userid = userid; 4


#
# wikiimage facet index definition
#

# index implementation --- can be exchanged
credimage = at.tuwien.mucke.index.StandardImageFacetIndexer
# content to be indexed
credimage.contentfolder = D:/Data/collections/UserCredibilityImages/images
# defines the index location
credimage.indexfolder = D:/data/indices/UserCredibilityImages/prototypetest/credimage
# fields to be indexed, or NONE if no additional fields are needed
credimage.fields = NONE
# IndexFieldGenerator to be used for indexing, or NONE if no additional fields are needed
credimage.fields.generator = NONE
# definition of facet identifier (FILENAME or signature (XPath or RegEx))
credimage.field.facetid = FILENAME
# image features to be used. Possible values:
# AutoColorCorrelogram: Creates the AutoColorCorrelation feature.
# CEDD: Creates the CEDD feature.
# ColorHistogram: Creates a DocumentBuilder for simple RGB color histograms.
# ColorLayout: Creates a fast (byte[] based) version of the MPEG-7 Color layout.
# EdgeHistogram: Creates a fast (byte[] based) version of the MPEG-7 EdgeHistogram.
# FCTH: Creates the FCTH feature.
# Full: Creates all available features.
# Gabor: Creates the Gabor feature.
# JCD: Creates the JCD feature.
# JointHistogram: Creates the JointHistogram feature.
# JpegCoefficientHistogram: Creates a the JpegCoefficientHistogram feature.
# OpponentHistogram: Creates the OpponentHistogram feature.
# Scalable: Creates a fast (byte[] based) version of the MPEG-7 ColorLayout.
# Tamura: Creates three Tamura features.
credimage.features = CEDD


#####################
# query configuration
#####################

# defines the query collection file
querycollection.file = D:/Data/collections/UserCredibilityImages/topics
# defines the query collection reader, a collection-specific narrow reader without parameters
querycollection.reader = at.tuwien.mucke.plugin.prototypetest.query.FileQueryCollectionReader


##########################
# crediblity configuration
##########################

# defines the query collection file
credibilitycollection.file = D:/Data/collections/UserCredibilityImages/userCredibilityScoresManual.txt
# defines the query collection reader, a collection-specific narrow reader without parameters
credibilitycollection.reader = at.tuwien.mucke.plugin.prototypetest.crediblity.CSVCredibilityCollectionReader


######################
# search configuration
######################

# defines the search that might consists of many facets and use the query facets defined in the query configuration
#search.facetsearchers = search.facetsearcher1, search.facetsearcher2
# search facet searchers for text
#search.facetsearcher1.class = at.tuwien.mucke.search.TextFacetSearcher
#search.facetsearcher1.facet = wikidoc
#search.facetsearcher1.query.facets = query.en


##########################
# clustering configuration
##########################

# defines how facet results are merged, here credibilty information is used to re-rank
clustering.facetmerge.class = at.tuwien.mucke.clustering.CredibilityFacetResultMerger